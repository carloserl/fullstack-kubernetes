apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
  labels:
    app:  client-app
spec:
  replicas:  {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app:  client-app
  template:
    metadata:
      labels:
        app:  client-app
    spec:
      containers:
        - name:  client-app
          image:  {{ .Values.frontend.image }}
          ports:
            - containerPort:  {{ .Values.frontend.service.targetPort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
  labels:
    app: server-app
spec:
  replicas:  {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app:  server-app
  template:
    metadata:
      labels:
        app:  server-app
    spec:
      containers:
        - name:  server-app
          image:  {{ .Values.backend.image }}
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "python manage.py migrate && python manage.py runserver 0.0.0.0:8000",
            ]
          ports:
            - containerPort: {{ .Values.backend.service.targetPort }}
          env:
            - name: MYSQL_DATABASE
              value: mysql-db
            - name: MYSQL_DATABASE_HOST
              value: mysql-cluster-ip-service
            - name: MYSQL_DATABASE_PORT
              value: "3306"
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              value: root
            - name: MYSQL_ROOT_PASSWORD
              value: root
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-deployment
  labels:
    app: mysql-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-app
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: mysql-app
          image: {{ .Values.database.image }} 
          ports:
            - containerPort: {{ .Values.database.service.targetPort }} 
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_DATABASE
              value: mysql-db
            - name: MYSQL_DATABASE_HOST
              value: mysql-cluster-ip-service
            - name: MYSQL_DATABASE_PORT
              value: "3306"
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              value: root
            - name: MYSQL_ROOT_PASSWORD
              value: root



